if(!self.define){let e,s={};const c=(c,n)=>(c=new URL(c+".js",n).href,s[c]||new Promise((s=>{if("document"in self){const e=document.createElement("script");e.src=c,e.onload=s,document.head.appendChild(e)}else e=c,importScripts(c),s()})).then((()=>{let e=s[c];if(!e)throw new Error(`Module ${c} didnâ€™t register its module`);return e})));self.define=(n,i)=>{const o=e||("document"in self?document.currentScript.src:"")||location.href;if(s[o])return;let t={};const r=e=>c(e,o),a={module:{uri:o},exports:t,require:r};s[o]=Promise.all(n.map((e=>a[e]||r(e)))).then((e=>(i(...e),t)))}}define(["./workbox-b445c9d2"],(function(e){"use strict";self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),e.precacheAndRoute([{url:"favicon.png",revision:"3a387408ecc6cc283f724b39ca5fffb4"},{url:"icons/google.png",revision:"ca2f7db280e9c773e341589a81c15082"},{url:"manifest.json",revision:"4ad7e314aa762f431fb4ed20dbe18c6a"}],{}),e.registerRoute(/^https:\/\/api\.github\.com\/users\/octocat\/repos/,new e.StaleWhileRevalidate({cacheName:"github-api-cache",plugins:[new e.ExpirationPlugin({maxEntries:50,maxAgeSeconds:86400})]}),"GET"),e.registerRoute((({url:e})=>e.origin===self.location.origin),new e.CacheFirst({cacheName:"static-cache",plugins:[new e.ExpirationPlugin({maxEntries:50,maxAgeSeconds:604800})]}),"GET")}));
//# sourceMappingURL=sw.js.map
